
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CLAIM_BAR COMMA D DIVIDE DOT DOUBLE_COLON GEMM IDENTIFIER LAB LOAD LRB LSB MAKE_TENSOR MINUS MULTICAST NUMBER PLUS RAB RRB RSB SLICE SPM_ALOCATE SPM_FREE STORE TIMES TMAstatement : statement statementstatement : instructionexpression : termexpression : expression PLUS termexpression : expression MINUS termterm : factorterm : term TIMES factorterm : term DIVIDE factorfactor : NUMBERfactor : IDENTIFIERfactor : LRB expression RRBempty :assignment : IDENTIFIER LSB assignment RSBlist : LSB bare_list RSBbare_list : expressionbare_list : bare_list COMMA expressionexpression : listassignment : assignment COMMA assignmentassignment : emptyassignment : NUMBERassignment : listassignment : IDENTIFIERassignment : IDENTIFIER ASSIGN expressionslice_predicate : SLICE DOT NUMBER DOTinstruction : slice_predicate CLAIM_BAR LRB assignment RRBinstruction : slice_predicate SPM_ALOCATE LRB assignment RRBinstruction : slice_predicate SPM_FREE LRB assignment RRBtma_predicate : TMA DOTslice_suffix : DOT SLICE DOT NUMBERinstruction : tma_predicate LOAD slice_suffix LRB assignment RRBinstruction : tma_predicate LOAD DOT MULTICAST LRB assignment RRBinstruction : tma_predicate STORE slice_suffix LRB assignment RRBinstruction : tma_predicate STORE DOT MULTICAST LRB assignment RRBtemplate_suffix : DOUBLE_COLON LAB assignment RABtemplate_suffix : DOUBLE_COLON LAB NUMBER D RABinstruction : MAKE_TENSOR template_suffix LRB assignment RRBinstruction : slice_predicate GEMM template_suffix LRB assignment RRB'
    
_lr_action_items = {'MAKE_TENSOR':([0,1,2,8,48,60,61,68,81,82,85,95,96,],[5,5,-2,5,-25,-26,-27,-36,-37,-30,-32,-31,-33,]),'SLICE':([0,1,2,8,24,26,48,60,61,68,81,82,85,95,96,],[6,6,-2,6,41,41,-25,-26,-27,-36,-37,-30,-32,-31,-33,]),'TMA':([0,1,2,8,48,60,61,68,81,82,85,95,96,],[7,7,-2,7,-25,-26,-27,-36,-37,-30,-32,-31,-33,]),'$end':([1,2,8,48,60,61,68,81,82,85,95,96,],[0,-2,-1,-25,-26,-27,-36,-37,-30,-32,-31,-33,]),'CLAIM_BAR':([3,47,],[9,-24,]),'SPM_ALOCATE':([3,47,],[10,-24,]),'SPM_FREE':([3,47,],[11,-24,]),'GEMM':([3,47,],[12,-24,]),'LOAD':([4,18,],[13,-28,]),'STORE':([4,18,],[14,-28,]),'DOUBLE_COLON':([5,12,],[16,16,]),'DOT':([6,7,13,14,29,41,],[17,18,24,26,47,65,]),'LRB':([9,10,11,15,22,23,25,32,40,43,51,59,69,75,76,77,78,79,84,87,],[19,20,21,27,38,39,42,59,64,67,59,59,-34,59,59,59,59,59,-29,-35,]),'LAB':([16,],[28,]),'NUMBER':([17,19,20,21,27,28,32,38,39,42,49,50,51,59,64,65,67,75,76,77,78,79,],[29,34,34,34,34,46,57,34,34,34,34,34,57,57,34,84,34,57,57,57,57,57,]),'IDENTIFIER':([19,20,21,27,28,32,38,39,42,49,50,51,59,64,67,75,76,77,78,79,],[31,31,31,31,31,58,31,31,31,31,31,58,58,31,31,58,58,58,58,58,]),'RRB':([19,20,21,27,30,31,33,34,35,36,37,38,39,42,44,49,54,55,56,57,58,62,63,64,66,67,71,73,74,80,83,86,88,90,91,92,93,94,],[-12,-12,-12,-12,48,-22,-19,-20,-21,60,61,-12,-12,-12,68,-12,-3,-17,-6,-9,-10,81,82,-12,85,-12,-18,-23,-14,94,95,96,-13,-4,-5,-7,-8,-11,]),'COMMA':([19,20,21,27,28,30,31,33,34,35,36,37,38,39,42,44,45,46,49,50,52,53,54,55,56,57,58,62,63,64,66,67,71,72,73,74,83,86,88,89,90,91,92,93,94,],[-12,-12,-12,-12,-12,49,-22,-19,-20,-21,49,49,-12,-12,-12,49,49,-20,-12,-12,75,-15,-3,-17,-6,-9,-10,49,49,-12,49,-12,49,49,-23,-14,49,49,-13,-16,-4,-5,-7,-8,-11,]),'LSB':([19,20,21,27,28,31,32,38,39,42,49,50,51,59,64,67,75,],[32,32,32,32,32,50,32,32,32,32,32,32,32,32,32,32,32,]),'MULTICAST':([24,26,],[40,43,]),'RAB':([28,31,33,34,35,45,46,49,54,55,56,57,58,70,71,73,74,88,90,91,92,93,94,],[-12,-22,-19,-20,-21,69,-20,-12,-3,-17,-6,-9,-10,87,-18,-23,-14,-13,-4,-5,-7,-8,-11,]),'RSB':([31,33,34,35,49,50,52,53,54,55,56,57,58,71,72,73,74,88,89,90,91,92,93,94,],[-22,-19,-20,-21,-12,-12,74,-15,-3,-17,-6,-9,-10,-18,88,-23,-14,-13,-16,-4,-5,-7,-8,-11,]),'ASSIGN':([31,],[51,]),'D':([46,],[70,]),'PLUS':([53,54,55,56,57,58,73,74,80,89,90,91,92,93,94,],[76,-3,-17,-6,-9,-10,76,-14,76,76,-4,-5,-7,-8,-11,]),'MINUS':([53,54,55,56,57,58,73,74,80,89,90,91,92,93,94,],[77,-3,-17,-6,-9,-10,77,-14,77,77,-4,-5,-7,-8,-11,]),'TIMES':([54,56,57,58,90,91,92,93,94,],[78,-6,-9,-10,78,78,-7,-8,-11,]),'DIVIDE':([54,56,57,58,90,91,92,93,94,],[79,-6,-9,-10,79,79,-7,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,1,8,],[1,8,8,]),'instruction':([0,1,8,],[2,2,2,]),'slice_predicate':([0,1,8,],[3,3,3,]),'tma_predicate':([0,1,8,],[4,4,4,]),'template_suffix':([5,12,],[15,22,]),'slice_suffix':([13,14,],[23,25,]),'assignment':([19,20,21,27,28,38,39,42,49,50,64,67,],[30,36,37,44,45,62,63,66,71,72,83,86,]),'empty':([19,20,21,27,28,38,39,42,49,50,64,67,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'list':([19,20,21,27,28,32,38,39,42,49,50,51,59,64,67,75,],[35,35,35,35,35,55,35,35,35,35,35,55,55,35,35,55,]),'bare_list':([32,],[52,]),'expression':([32,51,59,75,],[53,73,80,89,]),'term':([32,51,59,75,76,77,],[54,54,54,54,90,91,]),'factor':([32,51,59,75,76,77,78,79,],[56,56,56,56,56,56,92,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement statement','statement',2,'p_statements','parser.py',8),
  ('statement -> instruction','statement',1,'p_statement_instruction','parser.py',13),
  ('expression -> term','expression',1,'p_expression_term','parser.py',18),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',23),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',28),
  ('term -> factor','term',1,'p_term_factor','parser.py',33),
  ('term -> term TIMES factor','term',3,'p_term_times','parser.py',38),
  ('term -> term DIVIDE factor','term',3,'p_term_div','parser.py',43),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',48),
  ('factor -> IDENTIFIER','factor',1,'p_factor_identifier','parser.py',53),
  ('factor -> LRB expression RRB','factor',3,'p_factor_expr','parser.py',58),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',67),
  ('assignment -> IDENTIFIER LSB assignment RSB','assignment',4,'p_assignment_bracket','parser.py',72),
  ('list -> LSB bare_list RSB','list',3,'p_list_bracket','parser.py',79),
  ('bare_list -> expression','bare_list',1,'p_bare_list_expression','parser.py',84),
  ('bare_list -> bare_list COMMA expression','bare_list',3,'p_bare_list_expression_comma','parser.py',89),
  ('expression -> list','expression',1,'p_expression_list','parser.py',94),
  ('assignment -> assignment COMMA assignment','assignment',3,'p_assignment_comma','parser.py',101),
  ('assignment -> empty','assignment',1,'p_assignment_empty','parser.py',106),
  ('assignment -> NUMBER','assignment',1,'p_assignment_number','parser.py',111),
  ('assignment -> list','assignment',1,'p_assignment_list','parser.py',116),
  ('assignment -> IDENTIFIER','assignment',1,'p_assignment_identifier','parser.py',121),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','parser.py',126),
  ('slice_predicate -> SLICE DOT NUMBER DOT','slice_predicate',4,'p_slice_predicate_slice_number','parser.py',131),
  ('instruction -> slice_predicate CLAIM_BAR LRB assignment RRB','instruction',5,'p_instruction_slice_claim_bar','parser.py',137),
  ('instruction -> slice_predicate SPM_ALOCATE LRB assignment RRB','instruction',5,'p_instruction_slice_spm_alocate','parser.py',143),
  ('instruction -> slice_predicate SPM_FREE LRB assignment RRB','instruction',5,'p_instruction_slice_spm_free','parser.py',149),
  ('tma_predicate -> TMA DOT','tma_predicate',2,'p_tma_predicate','parser.py',155),
  ('slice_suffix -> DOT SLICE DOT NUMBER','slice_suffix',4,'p_slice_suffix_slice_number','parser.py',159),
  ('instruction -> tma_predicate LOAD slice_suffix LRB assignment RRB','instruction',6,'p_instruction_tma_load_slice','parser.py',165),
  ('instruction -> tma_predicate LOAD DOT MULTICAST LRB assignment RRB','instruction',7,'p_instruction_tma_load_multicast','parser.py',171),
  ('instruction -> tma_predicate STORE slice_suffix LRB assignment RRB','instruction',6,'p_instruction_tma_store_slice','parser.py',177),
  ('instruction -> tma_predicate STORE DOT MULTICAST LRB assignment RRB','instruction',7,'p_instruction_tma_store_multicast','parser.py',183),
  ('template_suffix -> DOUBLE_COLON LAB assignment RAB','template_suffix',4,'p_template_suffix','parser.py',189),
  ('template_suffix -> DOUBLE_COLON LAB NUMBER D RAB','template_suffix',5,'p_make_tensor_template_suffix','parser.py',195),
  ('instruction -> MAKE_TENSOR template_suffix LRB assignment RRB','instruction',5,'p_instruction_make_tensor','parser.py',201),
  ('instruction -> slice_predicate GEMM template_suffix LRB assignment RRB','instruction',6,'p_instruction_slice_gemm','parser.py',207),
]
