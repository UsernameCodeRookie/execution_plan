
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CLAIM_BAR COMMA DIVIDE DOT IDENTIFIER LOAD LPAREN MINUS MULTICAST NUMBER PLUS RPAREN SLICE SPM_ALOCATE STORE TIMES TMAstatement : statement statementstatement : instructionexpression : termexpression : expression PLUS termexpression : expression MINUS termterm : factorterm : term TIMES factorterm : term DIVIDE factorfactor : NUMBERfactor : LPAREN expression RPARENempty :assignment : assignment COMMA assignmentassignment : emptyassignment : NUMBERassignment : IDENTIFIERassignment : IDENTIFIER ASSIGN expressionslice_predicate : SLICE DOT NUMBER DOTinstruction : slice_predicate CLAIM_BAR LPAREN assignment RPARENinstruction : slice_predicate SPM_ALOCATE LPAREN assignment RPARENtma_predicate : TMA DOTinstruction : tma_predicate LOAD DOT SLICE DOT NUMBER LPAREN assignment RPARENinstruction : tma_predicate LOAD DOT MULTICAST LPAREN assignment RPARENinstruction : tma_predicate STORE DOT SLICE DOT NUMBER LPAREN assignment RPARENinstruction : tma_predicate STORE DOT MULTICAST LPAREN assignment RPAREN'
    
_lr_action_items = {'SLICE':([0,1,2,7,16,17,29,32,53,55,63,64,],[5,5,-2,5,24,26,-18,-19,-22,-24,-21,-23,]),'TMA':([0,1,2,7,29,32,53,55,63,64,],[6,6,-2,6,-18,-19,-22,-24,-21,-23,]),'$end':([1,2,7,29,32,53,55,63,64,],[0,-2,-1,-18,-19,-22,-24,-21,-23,]),'CLAIM_BAR':([3,28,],[8,-17,]),'SPM_ALOCATE':([3,28,],[9,-17,]),'LOAD':([4,13,],[10,-20,]),'STORE':([4,13,],[11,-20,]),'DOT':([5,6,10,11,18,24,26,],[12,13,16,17,28,33,35,]),'LPAREN':([8,9,25,27,31,42,43,45,47,48,49,50,],[14,15,34,36,42,42,52,54,42,42,42,42,]),'NUMBER':([12,14,15,30,31,33,34,35,36,42,47,48,49,50,52,54,],[18,21,21,21,41,43,21,45,21,41,41,41,41,41,21,21,]),'IDENTIFIER':([14,15,30,34,36,52,54,],[22,22,22,22,22,22,22,]),'RPAREN':([14,15,19,20,21,22,23,30,34,36,37,38,39,40,41,44,46,51,52,54,56,57,58,59,60,61,62,],[-11,-11,29,-13,-14,-15,32,-11,-11,-11,-12,-16,-3,-6,-9,53,55,60,-11,-11,-4,-5,-7,-8,-10,63,64,]),'COMMA':([14,15,19,20,21,22,23,30,34,36,37,38,39,40,41,44,46,52,54,56,57,58,59,60,61,62,],[-11,-11,30,-13,-14,-15,30,-11,-11,-11,30,-16,-3,-6,-9,30,30,-11,-11,-4,-5,-7,-8,-10,30,30,]),'MULTICAST':([16,17,],[25,27,]),'ASSIGN':([22,],[31,]),'PLUS':([38,39,40,41,51,56,57,58,59,60,],[47,-3,-6,-9,47,-4,-5,-7,-8,-10,]),'MINUS':([38,39,40,41,51,56,57,58,59,60,],[48,-3,-6,-9,48,-4,-5,-7,-8,-10,]),'TIMES':([39,40,41,56,57,58,59,60,],[49,-6,-9,49,49,-7,-8,-10,]),'DIVIDE':([39,40,41,56,57,58,59,60,],[50,-6,-9,50,50,-7,-8,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,1,7,],[1,7,7,]),'instruction':([0,1,7,],[2,2,2,]),'slice_predicate':([0,1,7,],[3,3,3,]),'tma_predicate':([0,1,7,],[4,4,4,]),'assignment':([14,15,30,34,36,52,54,],[19,23,37,44,46,61,62,]),'empty':([14,15,30,34,36,52,54,],[20,20,20,20,20,20,20,]),'expression':([31,42,],[38,51,]),'term':([31,42,47,48,],[39,39,56,57,]),'factor':([31,42,47,48,49,50,],[40,40,40,40,58,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement statement','statement',2,'p_statements','parser.py',7),
  ('statement -> instruction','statement',1,'p_statement_instruction','parser.py',12),
  ('expression -> term','expression',1,'p_expression_term','parser.py',17),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',22),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',27),
  ('term -> factor','term',1,'p_term_factor','parser.py',32),
  ('term -> term TIMES factor','term',3,'p_term_times','parser.py',37),
  ('term -> term DIVIDE factor','term',3,'p_term_div','parser.py',42),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',47),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',52),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',61),
  ('assignment -> assignment COMMA assignment','assignment',3,'p_assignments','parser.py',66),
  ('assignment -> empty','assignment',1,'p_assignment_empty','parser.py',71),
  ('assignment -> NUMBER','assignment',1,'p_assignment_number','parser.py',75),
  ('assignment -> IDENTIFIER','assignment',1,'p_assignment_identifier','parser.py',80),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','parser.py',85),
  ('slice_predicate -> SLICE DOT NUMBER DOT','slice_predicate',4,'p_slice_predicate_slice_number','parser.py',90),
  ('instruction -> slice_predicate CLAIM_BAR LPAREN assignment RPAREN','instruction',5,'p_instruction_slice_claim_bar','parser.py',96),
  ('instruction -> slice_predicate SPM_ALOCATE LPAREN assignment RPAREN','instruction',5,'p_instruction_slice_spm_alocate','parser.py',101),
  ('tma_predicate -> TMA DOT','tma_predicate',2,'p_tma_predicate','parser.py',106),
  ('instruction -> tma_predicate LOAD DOT SLICE DOT NUMBER LPAREN assignment RPAREN','instruction',9,'p_instruction_tma_load_slice','parser.py',110),
  ('instruction -> tma_predicate LOAD DOT MULTICAST LPAREN assignment RPAREN','instruction',7,'p_instruction_tma_load_multicast','parser.py',115),
  ('instruction -> tma_predicate STORE DOT SLICE DOT NUMBER LPAREN assignment RPAREN','instruction',9,'p_instruction_tma_store_slice','parser.py',120),
  ('instruction -> tma_predicate STORE DOT MULTICAST LPAREN assignment RPAREN','instruction',7,'p_instruction_tma_store_multicast','parser.py',125),
]
